from machine import Pin, PWM
import time

servo = None  # lo declaramos global para usarlo despu√©s

pulgar = 6
indice = 7
medio = 0
anular = 1
me√±ique = 8
pulgar2 = 10

# Rango t√≠pico de un SG90 (ajustable seg√∫n tu servo)
min_us = 500    # Pulso m√≠nimo (~0.5 ms)
max_us = 2500   # Pulso m√°ximo (~2.5 ms)



def set_pulse(us):
    """
    Mueve el servo a partir de un pulso en microsegundos (500‚Äì2500).
    """
    duty = int(us * 1023 // 20000)  # convertir microsegundos a duty (resoluci√≥n 10 bits)
    servo.duty(duty)
    print(f"Pulso: {us} us -> duty: {duty}")

# --- Selecci√≥n del pin ---
while True:
    try:
        pin_number = int(input("üëâ Ingresa el n√∫mero de GPIO donde est√° conectado el servo: "))
        servo = PWM(Pin(pin_number), freq=50)  # 50 Hz t√≠pico de servos
        print(f"‚úÖ Servo inicializado en GPIO{pin_number}")
        break
    except ValueError:
        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
    except Exception as e:
        print(f"‚ö†Ô∏è Error: {e}, intenta con otro pin.")

# --- Control manual ---
print("Control manual del servo por pulsos (500 a 2500). Escribe 'salir' para terminar.")

while True:
    cmd = input("Pulso en us: ")
    if cmd.lower() == "salir":
        servo.deinit()
        print("Servo deshabilitado.")
        break
    try:
        us = int(cmd)
        if us < min_us or us > max_us:
            print(f"‚ö†Ô∏è El rango seguro es {min_us} - {max_us} us")
        else:
            set_pulse(us)
    except ValueError:
        print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido o 'salir'")
